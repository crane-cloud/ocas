version: '3'
services:
  mongodb-rate:
    image: mongo:4.4.6
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      placement:
        constraints:
        - node.labels.name == cr-bun
    container_name: hotel_reserv_rate_mongo
    logging:
      driver: fluentd
      options:
        tag: mongodb-rate
    volumes:
    - rate:/data/db
  consul:
    image: consul:1.12
    ports:
    - 8300:8300
    - 8400:8400
    - 8500:8500
    - 8600:53/udp
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      placement:
        constraints: []
  memcached-profile:
    image: memcached
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      placement:
        constraints:
        - node.labels.name == cr-dar
    environment:
    - MEMCACHED_CACHE_SIZE=128
    - MEMCACHED_THREADS=2
    container_name: hotel_reserv_profile_mmc
    logging:
      driver: fluentd
      options:
        tag: memcached-profile
  memcached-reserve:
    image: memcached
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      placement:
        constraints:
        - node.labels.name == cr-kla
    environment:
    - MEMCACHED_CACHE_SIZE=128
    - MEMCACHED_THREADS=2
    container_name: hotel_reserv_reservation_mmc
    logging:
      driver: fluentd
      options:
        tag: memcached-reserve
  mongodb-user:
    image: mongo:4.4.6
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      placement:
        constraints:
        - node.labels.name == cr-kla
    container_name: hotel_reserv_user_mongo
    logging:
      driver: fluentd
      options:
        tag: mongodb-user
    volumes:
    - user:/data/db
  jaeger:
    image: jaegertracing/all-in-one:1.25
    ports:
    - 14250:14250
    - 9411:9411
    - '14269'
    - 5778:5778
    - 14268:14268
    - '14267'
    - 16686:16686
    - 5775:5775/udp
    - 6831:6831/udp
    - 6832:6832/udp
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      placement:
        constraints:
        - node.role == manager
    environment:
    - JAEGER_DISABLED=true
    - SPAN_STORAGE_TYPE=grpc-plugin
    - GRPC_STORAGE_PLUGIN_BINARY=/app/jaeger-mongodb
    - GRPC_STORAGE_PLUGIN_CONFIGURATION_FILE=/app/configs/config.yaml
    container_name: hotel_reserv_jaeger
    volumes:
    - /home/ubuntu/ocas/jaeger-mongodb:/app
  memcached-rate:
    image: memcached
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      placement:
        constraints:
        - node.labels.name == cr-bun
    environment:
    - MEMCACHED_CACHE_SIZE=128
    - MEMCACHED_THREADS=2
    container_name: hotel_reserv_rate_mmc
    logging:
      driver: fluentd
      options:
        tag: memcached-rate
  geo:
    image: hotel_reserv_geo_single_node:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      placement:
        constraints:
        - node.labels.name == cr-bun
    environment:
    - TLS
    - GC
    - JAEGER_SAMPLE_RATIO
    - LOG_LEVEL
    entrypoint: geo
    container_name: hotel_reserv_geo
    depends_on:
    - mongodb-geo
    - consul
    logging:
      driver: fluentd
      options:
        tag: geo
  mongodb-profile:
    image: mongo:4.4.6
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      placement:
        constraints:
        - node.labels.name == cr-dar
    container_name: hotel_reserv_profile_mongo
    logging:
      driver: fluentd
      options:
        tag: mongodb-profile
    volumes:
    - profile:/data/db
  mongodb-recommendation:
    image: mongo:4.4.6
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      placement:
        constraints:
        - node.labels.name == cr-kla
    container_name: hotel_reserv_recommendation_mongo
    logging:
      driver: fluentd
      options:
        tag: mongodb-recommendation
    volumes:
    - recommendation:/data/db
  user:
    image: hotel_reserv_user_single_node:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      placement:
        constraints:
        - node.labels.name == cr-kla
    environment:
    - TLS
    - GC
    - JAEGER_SAMPLE_RATIO
    - LOG_LEVEL
    entrypoint: user
    container_name: hotel_reserv_user
    depends_on:
    - mongodb-user
    - consul
    logging:
      driver: fluentd
      options:
        tag: user
  search:
    image: hotel_reserv_search_single_node:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      placement:
        constraints:
        - node.labels.name == cr-bun
    environment:
    - TLS
    - GC
    - JAEGER_SAMPLE_RATIO
    - LOG_LEVEL
    entrypoint: search
    container_name: hotel_reserv_search
    depends_on:
    - consul
    logging:
      driver: fluentd
      options:
        tag: search
  rate:
    image: hotel_reserv_rate_single_node:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      placement:
        constraints:
        - node.labels.name == cr-bun
    environment:
    - TLS
    - GC
    - JAEGER_SAMPLE_RATIO
    - LOG_LEVEL
    - MEMC_TIMEOUT
    entrypoint: rate
    container_name: hotel_reserv_rate
    depends_on:
    - mongodb-rate
    - memcached-rate
    - consul
    logging:
      driver: fluentd
      options:
        tag: rate
  profile:
    image: hotel_reserv_profile_single_node:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      placement:
        constraints:
        - node.labels.name == cr-dar
    environment:
    - TLS
    - GC
    - JAEGER_SAMPLE_RATIO
    - MEMC_TIMEOUT
    - LOG_LEVEL
    entrypoint: profile
    container_name: hotel_reserv_profile
    depends_on:
    - mongodb-profile
    - memcached-profile
    - consul
    logging:
      driver: fluentd
      options:
        tag: profile
  mongodb-reservation:
    image: mongo:4.4.6
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      placement:
        constraints:
        - node.labels.name == cr-kla
    container_name: hotel_reserv_reservation_mongo
    logging:
      driver: fluentd
      options:
        tag: mongodb-reservation
    volumes:
    - reservation:/data/db
  mongodb-geo:
    image: mongo:4.4.6
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      placement:
        constraints:
        - node.labels.name == cr-bun
    container_name: hotel_reserv_geo_mongo
    logging:
      driver: fluentd
      options:
        tag: mongodb-geo
    volumes:
    - geo:/data/db
  recommendation:
    image: hotel_reserv_recommend_single_node:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      placement:
        constraints:
        - node.labels.name == cr-kla
    environment:
    - TLS
    - GC
    - JAEGER_SAMPLE_RATIO
    - LOG_LEVEL
    entrypoint: recommendation
    container_name: hotel_reserv_recommendation
    depends_on:
    - mongodb-recommendation
    - consul
    logging:
      driver: fluentd
      options:
        tag: recommendation
  reservation:
    image: hotel_reserv_rsv_single_node:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      placement:
        constraints:
        - node.labels.name == cr-kla
    environment:
    - TLS
    - GC
    - JAEGER_SAMPLE_RATIO
    - LOG_LEVEL
    - MEMC_TIMEOUT
    entrypoint: reservation
    container_name: hotel_reserv_reservation
    depends_on:
    - mongodb-reservation
    - memcached-reserve
    - consul
    logging:
      driver: fluentd
      options:
        tag: reservation
  frontend:
    image: hotel_reserv_frontend_single_node:latest
    ports:
    - 5000:5000
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      placement:
        constraints:
        - node.labels.name == cr-lsk
    environment:
    - TLS
    - GC
    - JAEGER_SAMPLE_RATIO
    - LOG_LEVEL
    entrypoint: frontend
    container_name: hotel_reserv_frontend
    depends_on:
    - consul
    logging:
      driver: fluentd
      options:
        tag: frontend
volumes:
  rate: {}
  profile: {}
  geo: {}
  reservation: {}
  recommendation: {}
  user: {}
