// Code generated by protoc-gen-go. DO NOT EDIT.
// source: services/reservation/proto/reservation.proto

package reservation

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Request struct {
	CustomerName         string   `protobuf:"bytes,1,opt,name=customerName,proto3" json:"customerName,omitempty"`
	HotelId              []string `protobuf:"bytes,2,rep,name=hotelId,proto3" json:"hotelId,omitempty"`
	InDate               string   `protobuf:"bytes,3,opt,name=inDate,proto3" json:"inDate,omitempty"`
	OutDate              string   `protobuf:"bytes,4,opt,name=outDate,proto3" json:"outDate,omitempty"`
	RoomNumber           int32    `protobuf:"varint,5,opt,name=roomNumber,proto3" json:"roomNumber,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5c8deddef75bea3, []int{0}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetCustomerName() string {
	if m != nil {
		return m.CustomerName
	}
	return ""
}

func (m *Request) GetHotelId() []string {
	if m != nil {
		return m.HotelId
	}
	return nil
}

func (m *Request) GetInDate() string {
	if m != nil {
		return m.InDate
	}
	return ""
}

func (m *Request) GetOutDate() string {
	if m != nil {
		return m.OutDate
	}
	return ""
}

func (m *Request) GetRoomNumber() int32 {
	if m != nil {
		return m.RoomNumber
	}
	return 0
}

type Result struct {
	HotelId              []string `protobuf:"bytes,1,rep,name=hotelId,proto3" json:"hotelId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Result) Reset()         { *m = Result{} }
func (m *Result) String() string { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()    {}
func (*Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5c8deddef75bea3, []int{1}
}

func (m *Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Result.Unmarshal(m, b)
}
func (m *Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Result.Marshal(b, m, deterministic)
}
func (m *Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Result.Merge(m, src)
}
func (m *Result) XXX_Size() int {
	return xxx_messageInfo_Result.Size(m)
}
func (m *Result) XXX_DiscardUnknown() {
	xxx_messageInfo_Result.DiscardUnknown(m)
}

var xxx_messageInfo_Result proto.InternalMessageInfo

func (m *Result) GetHotelId() []string {
	if m != nil {
		return m.HotelId
	}
	return nil
}

func init() {
	proto.RegisterType((*Request)(nil), "reservation.Request")
	proto.RegisterType((*Result)(nil), "reservation.Result")
}

func init() {
	proto.RegisterFile("services/reservation/proto/reservation.proto", fileDescriptor_a5c8deddef75bea3)
}

var fileDescriptor_a5c8deddef75bea3 = []byte{
	// 238 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x90, 0x41, 0x4b, 0x03, 0x31,
	0x10, 0x85, 0x89, 0xb5, 0x5b, 0x3a, 0x15, 0xc4, 0x28, 0x12, 0x3c, 0xc8, 0xb2, 0xa7, 0x3d, 0x48,
	0x0b, 0x7a, 0x15, 0x41, 0xf4, 0xe2, 0xc1, 0x1e, 0xf2, 0x0f, 0xb2, 0xeb, 0x40, 0x43, 0x93, 0x8e,
	0x26, 0x93, 0x82, 0xbf, 0xc1, 0x5f, 0xe0, 0xbf, 0x95, 0x86, 0x16, 0xb3, 0xde, 0xbc, 0xcd, 0xfb,
	0x86, 0xc7, 0xe3, 0x3d, 0xb8, 0x89, 0x18, 0xb6, 0xb6, 0xc7, 0xb8, 0x08, 0xb8, 0x3b, 0x0d, 0x5b,
	0xda, 0x2c, 0xde, 0x03, 0x31, 0x95, 0x64, 0x9e, 0x89, 0x9c, 0x15, 0xa8, 0xf9, 0x16, 0x30, 0xd1,
	0xf8, 0x91, 0x30, 0xb2, 0x6c, 0xe0, 0xa4, 0x4f, 0x91, 0xc9, 0x63, 0x58, 0x1a, 0x8f, 0x4a, 0xd4,
	0xa2, 0x9d, 0xea, 0x01, 0x93, 0x0a, 0x26, 0x2b, 0x62, 0x74, 0x2f, 0x6f, 0xea, 0xa8, 0x1e, 0xb5,
	0x53, 0x7d, 0x90, 0xf2, 0x12, 0x2a, 0xbb, 0x79, 0x36, 0x8c, 0x6a, 0x94, 0x7d, 0x7b, 0xb5, 0x73,
	0x50, 0xe2, 0xfc, 0x38, 0xce, 0x8f, 0x83, 0x94, 0xd7, 0x00, 0x81, 0xc8, 0x2f, 0x93, 0xef, 0x30,
	0xa8, 0x71, 0x2d, 0xda, 0xb1, 0x2e, 0x48, 0xd3, 0x40, 0xa5, 0x31, 0x26, 0xc7, 0x65, 0xaa, 0x18,
	0xa4, 0xde, 0x7e, 0x09, 0x98, 0xe9, 0xdf, 0x3e, 0xf2, 0x1e, 0x4e, 0x5f, 0xcd, 0x1a, 0x4b, 0x74,
	0x31, 0x2f, 0x37, 0xd8, 0x97, 0xbd, 0x3a, 0xff, 0x43, 0x73, 0xce, 0x03, 0x9c, 0x3d, 0xad, 0xb0,
	0x5f, 0x3f, 0x6e, 0x8d, 0x75, 0xa6, 0xb3, 0xce, 0xf2, 0xe7, 0x3f, 0xfc, 0x5d, 0x95, 0x17, 0xbe,
	0xfb, 0x09, 0x00, 0x00, 0xff, 0xff, 0x97, 0x2f, 0x81, 0x74, 0x91, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ReservationClient is the client API for Reservation service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ReservationClient interface {
	// MakeReservation makes a reservation based on given information
	MakeReservation(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Result, error)
	// CheckAvailability checks if given information is available
	CheckAvailability(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Result, error)
}

type reservationClient struct {
	cc grpc.ClientConnInterface
}

func NewReservationClient(cc grpc.ClientConnInterface) ReservationClient {
	return &reservationClient{cc}
}

func (c *reservationClient) MakeReservation(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/reservation.Reservation/MakeReservation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reservationClient) CheckAvailability(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/reservation.Reservation/CheckAvailability", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ReservationServer is the server API for Reservation service.
type ReservationServer interface {
	// MakeReservation makes a reservation based on given information
	MakeReservation(context.Context, *Request) (*Result, error)
	// CheckAvailability checks if given information is available
	CheckAvailability(context.Context, *Request) (*Result, error)
}

// UnimplementedReservationServer can be embedded to have forward compatible implementations.
type UnimplementedReservationServer struct {
}

func (*UnimplementedReservationServer) MakeReservation(ctx context.Context, req *Request) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MakeReservation not implemented")
}
func (*UnimplementedReservationServer) CheckAvailability(ctx context.Context, req *Request) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckAvailability not implemented")
}

func RegisterReservationServer(s *grpc.Server, srv ReservationServer) {
	s.RegisterService(&_Reservation_serviceDesc, srv)
}

func _Reservation_MakeReservation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReservationServer).MakeReservation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/reservation.Reservation/MakeReservation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReservationServer).MakeReservation(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Reservation_CheckAvailability_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReservationServer).CheckAvailability(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/reservation.Reservation/CheckAvailability",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReservationServer).CheckAvailability(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _Reservation_serviceDesc = grpc.ServiceDesc{
	ServiceName: "reservation.Reservation",
	HandlerType: (*ReservationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "MakeReservation",
			Handler:    _Reservation_MakeReservation_Handler,
		},
		{
			MethodName: "CheckAvailability",
			Handler:    _Reservation_CheckAvailability_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "services/reservation/proto/reservation.proto",
}
