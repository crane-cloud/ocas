version: "3"
services:
  consul:
    image: consul:1.12
    ports:
      - "8300:8300"
      - "8400:8400"
      - "8500:8500"
      - "8600:53/udp"
    deploy:
      replicas: 1
      restart_policy:
        condition: any

  frontend:
    environment:
      - TLS
      - GC
      - JAEGER_SAMPLE_RATIO
      - LOG_LEVEL
    image: hotel_reserv_frontend_single_node:latest
    entrypoint: frontend
    container_name: 'hotel_reserv_frontend'
    ports:
      - "5000:5000"
    depends_on:
      - consul
    deploy:
      replicas: 3
      restart_policy:
        condition: any
    logging:
      driver: "fluentd"
      options:
        tag: "frontend"

  profile:
    environment:
      - TLS
      - GC
      - JAEGER_SAMPLE_RATIO
      - MEMC_TIMEOUT
      - LOG_LEVEL
    image: hotel_reserv_profile_single_node:latest
    entrypoint: profile
    container_name: 'hotel_reserv_profile'
    depends_on:
      - mongodb-profile
      - memcached-profile
      - consul
    deploy:
      replicas: 1
      restart_policy:
        condition: any
    logging:
      driver: "fluentd"
      options:
        tag: "profile"

  search:
    image: hotel_reserv_search_single_node:latest
    entrypoint: search
    container_name: 'hotel_reserv_search'
    depends_on:
      - consul
    environment:
      - TLS
      - GC
      - JAEGER_SAMPLE_RATIO
      - LOG_LEVEL
    deploy:
      replicas: 1
      restart_policy:
        condition: any
    logging:
      driver: "fluentd"
      options:
        tag: "search"

  geo:
    environment:
      - TLS
      - GC
      - JAEGER_SAMPLE_RATIO
      - LOG_LEVEL
    image: hotel_reserv_geo_single_node:latest
    entrypoint: geo
    container_name: 'hotel_reserv_geo'
    depends_on:
      - mongodb-geo
      - consul
    deploy:
      replicas: 1
      restart_policy:
        condition: any
    logging:
      driver: "fluentd"
      options:
        tag: "geo"

  rate:
    environment:
      - TLS
      - GC
      - JAEGER_SAMPLE_RATIO
      - LOG_LEVEL
      - MEMC_TIMEOUT      
    image: hotel_reserv_rate_single_node:latest
    entrypoint: rate
    container_name: 'hotel_reserv_rate'
    depends_on:
      - mongodb-rate
      - memcached-rate
      - consul
    deploy:
      replicas: 1
      restart_policy:
        condition: any
    logging:
      driver: "fluentd"
      options:
        tag: "rate"

  recommendation:
    environment:
      - TLS
      - GC
      - JAEGER_SAMPLE_RATIO
      - LOG_LEVEL
    image: hotel_reserv_recommend_single_node:latest
    entrypoint: recommendation
    container_name: 'hotel_reserv_recommendation'
    depends_on:
      - mongodb-recommendation
      - consul
    deploy:
      replicas: 1
      restart_policy:
        condition: any
    logging:
      driver: "fluentd"
      options:
        tag: "recommendation"

  user:
    environment:
      - TLS
      - GC
      - JAEGER_SAMPLE_RATIO
      - LOG_LEVEL
    image: hotel_reserv_user_single_node:latest
    entrypoint: user
    container_name: 'hotel_reserv_user'
    depends_on:
      - mongodb-user
      - consul
    deploy:
      replicas: 1
      restart_policy:
        condition: any
    logging:
      driver: "fluentd"
      options:
        tag: "user"

  reservation:
    environment:
      - TLS
      - GC
      - JAEGER_SAMPLE_RATIO
      - LOG_LEVEL
      - MEMC_TIMEOUT
    image: hotel_reserv_rsv_single_node:latest
    entrypoint: reservation
    container_name: 'hotel_reserv_reservation'
    depends_on:
      - mongodb-reservation
      - memcached-reserve
      - consul
    deploy:
      replicas: 1
      restart_policy:
        condition: any
    logging:
      driver: "fluentd"
      options:
        tag: "reservation"

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: 'hotel_reserv_jaeger'
    ports:
      - "14250:14250"
      - "9411:9411"
      - "14269"
      - "5778:5778"
      - "14268:14268"
      - "14267"
      - "16686:16686"
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"  
    environment:
      JAEGER_DISABLED: "true"
      SPAN_STORAGE_TYPE: "grpc-plugin"
      GRPC_STORAGE_PLUGIN_BINARY: "/app/jaeger-mongodb"
      GRPC_STORAGE_PLUGIN_CONFIGURATION_FILE: "/app/configs/config.yaml"
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      placement:
        constraints: [node.role == manager]
    volumes:
      - /home/ubuntu/ocas/jaeger-mongodb:/app

  mongo:
    #image: mongo:4.4.6
    image: mongo:5.0.25
    restart: always
    container_name: 'mongo'
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongoadmin
      MONGO_INITDB_ROOT_PASSWORD: 949cad0977fb8daf334e
    volumes:
      - /var/mongodb:/data/db
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      placement:
        constraints: [node.role == manager]

  mongo-express:
    image: mongo-express:latest
    restart: always
    container_name: 'mongo-express'
    ports:
      - 8084:8081
    depends_on:
      - mongo
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: mongoadmin
      ME_CONFIG_MONGODB_ADMINPASSWORD: 949cad0977fb8daf334e
      ME_CONFIG_MONGODB_URL: mongodb://mongoadmin:949cad0977fb8daf334e@mongo:27017/
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      placement:
        constraints: [node.role == manager]

  memcached-rate:
    image: memcached
    container_name: 'hotel_reserv_rate_mmc'
    environment:
      - MEMCACHED_CACHE_SIZE=128
      - MEMCACHED_THREADS=2
    logging:
      driver: "fluentd"
      options:
        tag: "memcached-rate"
    deploy:
      replicas: 1
      restart_policy:
        condition: any

  memcached-profile:
    image: memcached
    container_name: 'hotel_reserv_profile_mmc'
    environment:
      - MEMCACHED_CACHE_SIZE=128
      - MEMCACHED_THREADS=2
    logging:
      driver: "fluentd"
      options:
        tag: "memcached-profile"
    deploy:
      replicas: 1
      restart_policy:
        condition: any

  memcached-reserve:
    image: memcached
    container_name: 'hotel_reserv_reservation_mmc'
    environment:
      - MEMCACHED_CACHE_SIZE=128
      - MEMCACHED_THREADS=2
    logging:
      driver: "fluentd"
      options:
        tag: "memcached-reserve"
    deploy:
      replicas: 1
      restart_policy:
        condition: any

  mongodb-geo:
    image: mongo:4.4.6
    container_name: 'hotel_reserv_geo_mongo'
    volumes:
      - geo:/data/db
    deploy:
      replicas: 1
      restart_policy:
        condition: any
    logging:
      driver: "fluentd"
      options:
        tag: "mongodb-geo"

  mongodb-profile:
    image: mongo:4.4.6
    container_name: 'hotel_reserv_profile_mongo'
    volumes:
      - profile:/data/db
    deploy:
      replicas: 1
      restart_policy:
        condition: any
    logging:
      driver: "fluentd"
      options:
        tag: "mongodb-profile"

  mongodb-rate:
    image: mongo:4.4.6
    container_name: 'hotel_reserv_rate_mongo'
    volumes:
      - rate:/data/db
    deploy:
      replicas: 1
      restart_policy:
        condition: any
    logging:
      driver: "fluentd"
      options:
        tag: "mongodb-rate"

  mongodb-recommendation:
    image: mongo:4.4.6
    container_name: 'hotel_reserv_recommendation_mongo'
    volumes:
      - recommendation:/data/db
    deploy:
      replicas: 1
      restart_policy:
        condition: any
    logging:
      driver: "fluentd"
      options:
        tag: "mongodb-recommendation"

  mongodb-reservation:
    image: mongo:4.4.6
    container_name: 'hotel_reserv_reservation_mongo'
    volumes:
      - reservation:/data/db
    deploy:
      replicas: 1
      restart_policy:
        condition: any
    logging:
      driver: "fluentd"
      options:
        tag: "mongodb-reservation"

  mongodb-user:
    image: mongo:4.4.6
    container_name: 'hotel_reserv_user_mongo'
    volumes:
      - user:/data/db
    deploy:
      replicas: 1
      restart_policy:
        condition: any
    logging:
      driver: "fluentd"
      options:
        tag: "mongodb-user"


  prometheus:
    image: prom/prometheus:v2.36.2
    volumes:
      - ./prometheus/prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    ports:
      - 9090:9090
    depends_on:
      - cadvisor
    deploy:
      placement:
        constraints:
          - node.role==manager
      restart_policy:
        condition: on-failure

  node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /var/lib/node_exporter:/var/lib/node_exporter:ro
    command: 
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
      - '--collector.textfile.directory=/var/lib/node_exporter'
    ports:
      - 9100:9100
    deploy:
      mode: global
      restart_policy:
          condition: on-failure

  alertmanager:
    image: prom/alertmanager
    ports:
      - 9093:9093
    volumes:
      - "./prometheus/alertmanager/:/etc/alertmanager/"
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    deploy:
      placement:
        constraints:
           - node.role==manager
      restart_policy:
        condition: on-failure    

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8080:8080
    deploy:
      mode: global
      restart_policy:
          condition: on-failure

  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./prometheus/grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./prometheus/grafana/config.monitoring
    user: "472"
    deploy:
      placement:
        constraints:
          - node.role==manager
      restart_policy:
        condition: on-failure


volumes:
  geo:
  profile:
  rate:
  recommendation:
  reservation:
  user:
  prometheus_data:
  grafana_data: